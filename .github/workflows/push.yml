name: Push

on:
  - push

env:
  TOMCAT_VERSION: "9.0.65"

jobs:
  build:
    name: Build ERDDAP WAR and content
    runs-on: ubuntu-22.04
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-java@v3.4.0
        with:
          distribution: "temurin" # See 'Supported distributions' for available options
          java-version: "8"

      - name: Move files
        run: cp WEB-INF/erddap.web.xml WEB-INF/web.xml

      - name: Make WEB-INF/temp/
        run: mkdir WEB-INF/temp/

      - name: Build ERDDAP WAR
        # Force an exit code of 0 since jar usually returns 1
        run: "jar cvf erddap.war $(cat jar-input-files) || :"

      - name: ERDDAP WAR contents
        run: jar tf erddap.war

      - name: Upload erddap.war
        uses: actions/upload-artifact@v3
        with:
          name: erddap.war
          path: erddap.war

      - name: Build ERDDAP Content
        run: echo "Not yet"

  test:
    name: Test ERDDAP
    runs-on: ubuntu-22.04
    timeout-minutes: 15

    steps:
      - name: Setup Java 8
        uses: actions/setup-java@v3.4.0
        with:
          distribution: "temurin" # See 'Supported distributions' for available options
          java-version: "8"

      - run: which java

      - name: Install Tomcat
        env:
          JAVA_HOME: /usr/bin/java
        run: |
          wget https://dlcdn.apache.org/tomcat/tomcat-9/v${{ env.TOMCAT_VERSION }}/bin/apache-tomcat-${{ env.TOMCAT_VERSION }}.tar.gz
          tar xvfz apache-tomcat-${{ env.TOMCAT_VERSION }}.tar.gz
          rm apache-tomcat-${{ env.TOMCAT_VERSION }}.tar.gz

      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: apache-tomcat-${{ env.TOMCAT_VERSION }}/webapps/erddap

      - name: Move files
        run: cp apache-tomcat-${{ env.TOMCAT_VERSION }}/webapps/erddap/WEB-INF/erddap.web.xml apache-tomcat-${{ env.TOMCAT_VERSION }}/webapps/erddap/WEB-INF/web.xml

      - name: Make WEB-INF/temp/
        run: mkdir apache-tomcat-${{ env.TOMCAT_VERSION }}/webapps/erddap/WEB-INF/temp/

      - name: Compile Java classes
        working-directory: ./apache-tomcat-${{ env.TOMCAT_VERSION }}/webapps/erddap/WEB-INF
        run: javac -cp classes:../../../lib/servlet-api.jar:lib/* -Xmx4000M -Xms4000M gov.noaa.pfel.coastwatch.TestAll

      - name: Compile TestAll
        working-directory: ./apache-tomcat-${{ env.TOMCAT_VERSION }}/webapps/erddap/WEB-INF
        run: java -cp classes:../../../lib/servlet-api.jar:lib/* -Xmx4000M -Xms4000M classes/gov/noaa/pfel/coastwatch/TestAll

      - name: Debug directory structure
        if: ${{ failure() }}
        run: |
          sudo apt-get install tree
          tree

  docker:
    name: Build Docker image
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    needs:
      - build
    # - test

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download erddap.war
        uses: actions/download-artifact@v3
        with:
          name: erddap.war
          path: ./docker-files/erddap.war

      # - name: Download ERDDAP Content
      #   uses: actions/download-artifact@v3
      #   with:
      #     name:

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Docker meta
      #   id: meta
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: ghcr.io/${{ github.repository_owner }}/erddap

      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./docker-files/
          # push: true
          push: false
          tags: |
            ghcr.io/${{ github.repository_owner }}/erddap:${{ github.sha }}
          # push: ${{ github.event_name != 'pull_request' }}
          # tags: ${{ steps.meta.outputs.tags }}
          # labels: ${{ steps.meta.outputs.labels }}
